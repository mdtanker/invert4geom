[build-system]
requires = ["hatchling>=1.26", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "invert4geom"
authors = [
  { name = "Matt Tankersley", email = "matt.d.tankersley@gmail.com" },
]
description = "Constrained gravity inversion to recover the geometry of a density contrast."
keywords = ["inversion", "gravity", "geometry", "density", "Moho", "sediment", "geophysics", "geology", "geoscience"]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
###
# core
###
  "numpy>=1.25.0",
  "pandas>=2.0.0",
  "xarray>=2023.4.0",
  "scipy>=1.11.0",
  "scikit-learn>=1.3.0",
  "verde",
  "pooch",
  "rioxarray",
  "tqdm",
  "pygmt",
  "harmonica>=0.7", # need default depth arg for equivalent sources
  "deprecation",
  "pykdtree",
  "xrft",
  "polartoolkit",
  "numba",
  "numba_progress",
  "dask",
###
# optimization
###
  "optuna>=4.0", # need updated Journal Storage API
  "torch", # needed for GPSampler of Optuna, 'torch' is PyPI name for pytorch
  "nomkl ;  platform_system != 'Windows'", # needed to install pytorch dependencies from openblas instead of mkl
  "joblib",
  "psutil",
###
# visualization
###
  "pyvista",
  "trame",
  "ipywidgets",
  "matplotlib>=3.7.0",
  "seaborn",
  "ipython>=8.13.0",
  "plotly",
]

[dependency-groups]
uncert = [
  "UQpy >=4.1.7", # need fixed issue with scipy
]
synth = [
  "xesmf",
]
test = [
  {include-group = "uncert"},
  {include-group = "synth"},
  "pytest >=6",
  "pytest-cov >=3",
  "deepdiff",
]
dev = [
  {include-group = "test"},
  "jupyterlab",
]
docs = [
  "sphinx>=7.0",
  "myst_parser>=0.13",
  "sphinx_copybutton",
  "sphinx_autodoc_typehints",
  "sphinx-book-theme>=0.3",
  "nbsphinx",
  "ipykernel",
  "nbconvert",
  "sphinxcontrib-bibtex",
  "sphinx_autoapi",
  "sphinx_design",
]
all = [
  {include-group = "test"},
  {include-group = "dev"},
  {include-group = "synth"},
  {include-group = "uncert"},
  {include-group = "docs"},
]

[project.urls]
Homepage = "https://github.com/mdtanker/invert4geom"
Documentation = "https://invert4geom.readthedocs.io/"
"Bug Tracker" = "https://github.com/mdtanker/invert4geom/issues"
Discussions = "https://github.com/mdtanker/invert4geom/discussions"
Changelog = "https://invert4geom.readthedocs.io/en/latest/changelog.html"

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/invert4geom/_version.py"

[tool.hatch.envs.default]
# duplicate for now since hatch doesn't support groups yet
dependencies = []
scripts.test = "pytest {args}"

[tool.hatch.build.targets.sdist]
only-include = ["src"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
  "ignore:.*Implicit None on return values is deprecated and will raise KeyErrors.*:DeprecationWarning",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]
markers = [
    "use_numba: mark test functions that call Numba jitted functions",
]

[tool.coverage]
run.source = ["invert4geom"]
report.exclude_also = [
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.11"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
ignore_missing_imports = true
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = "invert4geom.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true


[tool.ruff]

[tool.ruff.lint]
extend-select = [
  "ARG",      # flake8-unused-arguments
  "B",        # flake8-bugbear
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "EXE",      # flake8-executable
  "G",        # flake8-logging-format
  "I",        # isort
  "ICN",      # flake8-import-conventions
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "PD901",    # Bad variable name warning
  "UP038",    # slows down code
]
# Uncomment if using a _compat.typing backport
# typing-modules = ["invert4geom._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
"noxfile.py" = ["T20"]
"*.ipynb" = [
  "T201",
  "C408", # unnecessary dictionary call
  "E712", # equality comparisons, don't work with Pandas
  "B018", # useless expression
]

[tool.pylint]
py-version = "3.11"
ignore-paths = ["CHANGELOG.md", ".*\\_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
similarities.min-similarity-lines = 5
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "wrong-import-position",
  "cyclic-import",
]

[tool.codespell]
ignore-words-list = ["montaj", "ore"]
