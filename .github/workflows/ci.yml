# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

# define when this workflow is triggered
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

# cancel any currently running workflows in this same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Use bash by default in all jobs
defaults:
  run:
    shell: bash -el {0}

# env:
#   FORCE_COLOR: 3
#   NUMBA_DISABLE_JIT: "1"

jobs:
  # run pre-commit which includes many formatting and linting tools
  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --hook-stage manual --all-files
      - name: Run PyLint
        run: |
          echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
          pipx run nox -s pylint
  # # Run tests and upload to codecov
  # test:
  #   name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
  #   runs-on: ${{ matrix.runs-on }}
  #   needs: [pre-commit]
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.8", "3.11", "3.12"]
  #       runs-on: [ubuntu-latest, macos-latest, windows-latest]

  #       include:
  #         - python-version: pypy-3.9
  #           runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         allow-prereleases: true

  #     - name: Install package
  #       run: python -m pip install .[test]

  #     - name: Test package
  #       run: >-
  #         python -m pytest -ra --cov --cov-report=xml --cov-report=term
  #         --durations=20

  #     - name: Upload coverage report
  #       uses: codecov/codecov-action@v3.1.4
