name: CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
  # release:
  #   types:
  #     - published

jobs:
  # job to determine appropriate version number, update changelog, and create a release commit
  release:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{secrets.PAT}}

      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@master

  # Always build & lint package.
  build-package:
    name: Build & verify package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: hynek/build-and-inspect-python-package@v1

  # Upload to Test PyPI on every commit on main.
  release-test-pypi:
    name: Publish in-dev package to test.pypi.org
    needs: [release, build-package]
    environment:
      name: testpypi
      url: https://pypi.org/p/invert4geom
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist

      - name: Upload package to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  # Upload to real PyPI on GitHub Releases.
  release-pypi:
    name: Publish released package to pypi.org
    needs: [release, build-package]
    environment:
      name: pypi
      url: https://pypi.org/p/invert4geom
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  # Upload to GitHub Releases on every release.
  release-github:
    name: Publish package distributions to GitHub Releases
    uses: python-semantic-release/upload-to-gh-release@main
    if: steps.release.outputs.released == 'true'
